{"version":3,"sources":["syntax/highlight.tsx","blog/code/Code.tsx","blog/text/Text.tsx","blog/Blog.tsx"],"names":["useFalse","bools","val","forEach","bool","current","useTrue","useFlip","Code","code","lang","highlightedCode","isString","useRef","nextString","currentString","isEscaped","isProperty","isObject","escapeHighlight","isClass","isKeyword","isComment","comment","keywords","split","map","piece","test","toUpperCase","includes","className","key","Math","random","useHighlightJS","isTag","nextTag","isAttr","isCode","nextCode","i","useHighlightHTML","isRuleset","isNumber","isValue","isColon","isClassOrId","isPseudo","useHighlightCSS","Text","text","Blog","retrieve","postTitleURLParam","useParams","useState","data","author","content","createdAt","Date","toDateString","title","link","suggestions","post","setPost","useEffect","a","type","href","target","rel","src","alt","console","log","suggestion","to","process"],"mappings":"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","file":"static/js/3.d7c88f35.chunk.js","sourcesContent":["/* eslint-disable react-hooks/rules-of-hooks */\n\nimport React, { useRef, MutableRefObject } from \"react\";\n\nconst useFalse = (bools: MutableRefObject<boolean>[], val?: string) => {\n  bools.forEach((bool: MutableRefObject<boolean>) => {\n    bool.current = false;\n  });\n  return val || \"\";\n};\n\nconst useTrue = (bools: MutableRefObject<boolean>[], val?: string) => {\n  bools.forEach((bool: MutableRefObject<boolean>) => {\n    bool.current = true;\n  });\n  return val || \"\";\n};\n\nconst useFlip = (bools: MutableRefObject<boolean>[], val?: string) => {\n  bools.forEach((bool: MutableRefObject<boolean>) => {\n    bool.current = !bool.current;\n  });\n  return val || \"\";\n};\n\nexport const useHighlightJS = (code: string) => {\n  const isString = useRef<boolean>(false);\n  const nextString = useRef<boolean>(false);\n  const currentString = useRef<string>(\"\");\n  const isEscaped = useRef<boolean>(false);\n  const isProperty = useRef<boolean>(false);\n  const isObject = useRef<boolean>(false);\n  const escapeHighlight = useRef<boolean>(false);\n  const isClass = useRef<boolean>(false);\n  const isKeyword = useRef<string>(\"\");\n  const isComment = useRef<boolean>(false);\n  const comment = useRef<string>(\"\");\n\n  const keywords = [\n    \"break\",\n    \"case\",\n    \"catch\",\n    \"class\",\n    \"const\",\n    \"continue\",\n    \"debugger\",\n    \"default\",\n    \"delete\",\n    \"do\",\n    \"else\",\n    \"export\",\n    \"extend\",\n    \"finally\",\n    \"for\",\n    \"function\",\n    \"if\",\n    \"import\",\n    \"in\",\n    \"instanceof\",\n    \"new\",\n    \"return\",\n    \"super\",\n    \"switch\",\n    \"this\",\n    \"throw\",\n    \"try\",\n    \"typeof\",\n    \"var\",\n    \"void\",\n    \"while\",\n    \"with\",\n    \"yield\",\n  ];\n\n  return code.split(\"\").map((piece: string) => {\n    if (piece === \"\\\\\" && isString.current) isEscaped.current = true;\n\n    if (\n      (piece === '\"' || piece === \"'\" || piece === \"`\") &&\n      isString.current &&\n      piece === currentString.current\n    ) {\n      isString.current = false;\n      nextString.current = true;\n    } else if (\n      (piece === '\"' || piece === \"'\" || piece === \"`\") &&\n      !isString.current\n    ) {\n      isString.current = true;\n      currentString.current = piece;\n    }\n\n    if (!/[ .;[\\]{}<>]/.test(piece) && !isObject.current)\n      isProperty.current = !isProperty.current;\n    else isObject.current = true;\n\n    if (piece.toUpperCase() === piece && /\\w/.test(piece))\n      isClass.current = true;\n\n    if (/[.,:;()[\\]{}<>\\-+*/=|&~!@#$%^&?]/.test(piece)) {\n      escapeHighlight.current = true;\n      isClass.current = false;\n    } else escapeHighlight.current = false;\n\n    if (!/[a-zA-Z]/.test(piece)) isKeyword.current += piece;\n    else isKeyword.current = \"\";\n\n    comment.current += piece;\n\n    if (comment.current.includes(\"/*\") && !isComment.current) {\n      isComment.current = true;\n      comment.current = \"\";\n    }\n\n    if (comment.current.includes(\"*/\") && isComment.current) {\n      isComment.current = true;\n      comment.current = \"\";\n    }\n\n    const className = isComment.current\n      ? \"comment\"\n      : isString.current\n      ? \"string\"\n      : isEscaped.current\n      ? useFlip([isEscaped, isString], \"string\")\n      : escapeHighlight.current\n      ? useTrue([escapeHighlight], \"normal\")\n      : nextString.current\n      ? useFalse([nextString], \"string\")\n      : isClass.current\n      ? \"class\"\n      : keywords.includes(isKeyword.current)\n      ? \"keyword\"\n      : isObject.current\n      ? useTrue([isObject], \"var\")\n      : !isObject.current && isProperty\n      ? \"property\"\n      : \"normal\";\n\n    return (\n      <span className={className} key={Math.random()}>\n        {piece}\n      </span>\n    );\n  });\n};\n\nexport const useHighlightHTML = (code: string) => {\n  const isTag = useRef<boolean>(false);\n  const nextTag = useRef<boolean>(false);\n  const isAttr = useRef<boolean>(false);\n  const escapeHighlight = useRef<boolean>(false);\n  const isString = useRef<boolean>(false);\n  const nextString = useRef<boolean>(false);\n  const currentString = useRef<string>(\"\");\n  const isEscaped = useRef<boolean>(false);\n  const isCode = useRef<boolean>(false);\n  const nextCode = useRef<boolean>(false);\n  const isComment = useRef<boolean>(false);\n  const comment = useRef<string>(\"\");\n\n  return code.split(\"\").map((piece: string, i) => {\n    if (piece === \"\\\\\" && isString.current) isEscaped.current = true;\n\n    if (\n      (piece === '\"' || piece === \"'\" || piece === \"`\") &&\n      isString.current &&\n      piece === currentString.current\n    ) {\n      isString.current = false;\n      nextString.current = true;\n    } else if (\n      (piece === '\"' || piece === \"'\" || piece === \"`\") &&\n      !isString.current\n    ) {\n      isString.current = true;\n      currentString.current = piece;\n    }\n\n    if (piece === \"<\") {\n      isTag.current = true;\n    }\n\n    if (piece === \">\") {\n      isTag.current = false;\n      isAttr.current = false;\n      nextTag.current = true;\n    }\n\n    if (/ /.test(piece) && isTag.current) {\n      isAttr.current = true;\n    }\n\n    if (/[.,:()[\\]{}\\-+*=|~!@$%^?]/.test(piece)) {\n      escapeHighlight.current = true;\n    }\n\n    if (piece === \"&\" && !isEscaped.current && code[i + 1] !== \"\\\\\")\n      isCode.current = true;\n    if (/\\\\/.test(piece)) isCode.current = false;\n\n    if (piece === \";\" && isCode.current) {\n      isCode.current = false;\n      nextCode.current = true;\n    }\n\n    if (!/[&#a-zA-Z0-9]/.test(piece) && isCode.current) isCode.current = false;\n\n    comment.current += piece;\n\n    if (comment.current.includes(\"<!--\") && !isComment.current) {\n      isComment.current = true;\n      comment.current = \"\";\n    }\n\n    if (comment.current.includes(\"-->\") && isComment.current) {\n      isComment.current = true;\n      comment.current = \"\";\n    }\n\n    const className = isComment.current\n      ? \"comment\"\n      : isString.current\n      ? \"string\"\n      : isEscaped.current\n      ? useFlip([isEscaped, isString], \"string\")\n      : escapeHighlight.current\n      ? useFalse([escapeHighlight], \"normal\")\n      : nextString.current\n      ? useFalse([nextString], \"string\")\n      : isAttr.current\n      ? \"property\"\n      : isTag.current\n      ? \"var\"\n      : nextTag.current\n      ? useFalse([nextTag], \"var\")\n      : isCode.current\n      ? \"keyword\"\n      : nextCode.current\n      ? useFalse([nextCode], \"keyword\")\n      : \"normal\";\n\n    return (\n      <span className={className} key={Math.random()}>\n        {piece}\n      </span>\n    );\n  });\n};\n\nexport const useHighlightCSS = (code: string) => {\n  const isRuleset = useRef<boolean>(false);\n  const escapeHighlight = useRef<boolean>(false);\n  const isString = useRef<boolean>(false);\n  const nextString = useRef<boolean>(false);\n  const currentString = useRef<string>(\"\");\n  const isEscaped = useRef<boolean>(false);\n  const isNumber = useRef<boolean>(false);\n  const isProperty = useRef<boolean>(false);\n  const isValue = useRef<boolean>(false);\n  const isTag = useRef<boolean>(false);\n  const isColon = useRef<boolean>(false);\n  const isClassOrId = useRef<boolean>(false);\n  const isPseudo = useRef<boolean>(false);\n  const isComment = useRef<boolean>(false);\n  const comment = useRef<string>(\"\");\n\n  return code.split(\"\").map((piece: string, i) => {\n    if (piece === \"{\" && !isRuleset.current) isRuleset.current = true;\n    if (piece === \"}\" && isRuleset.current) isRuleset.current = false;\n\n    if (piece === \"\\\\\" && isString.current) isEscaped.current = true;\n\n    if (\n      (piece === '\"' || piece === \"'\" || piece === \"`\") &&\n      isString.current &&\n      piece === currentString.current\n    ) {\n      isString.current = false;\n      nextString.current = true;\n    } else if (\n      (piece === '\"' || piece === \"'\" || piece === \"`\") &&\n      !isString.current\n    ) {\n      isString.current = true;\n      currentString.current = piece;\n    }\n\n    if (/[,:;()[\\]{}+*=|~!@$%^?]/.test(piece)) {\n      escapeHighlight.current = true;\n    }\n\n    if (/[0-9]/.test(piece)) isNumber.current = true;\n\n    if (/[a-z0-9]/i.test(piece) && isRuleset.current) isProperty.current = true;\n\n    if (piece === \":\" && isProperty.current) {\n      isValue.current = true;\n    }\n\n    if ((piece === \".\" || piece === \"#\") && !isRuleset.current)\n      isClassOrId.current = true;\n\n    if (/[a-z0-9]/i.test(piece) && !isRuleset.current) isTag.current = true;\n    if (isRuleset.current) isTag.current = false;\n\n    if (!isRuleset || piece === \";\") isValue.current = false;\n\n    if (piece === \":\" && !isRuleset.current) {\n      isColon.current = true;\n      isClassOrId.current = false;\n    } else isColon.current = false;\n\n    if (piece === \":\" && code[i + 1] !== \":\" && !isRuleset.current) {\n      isPseudo.current = true;\n    }\n\n    if (piece === \" \") {\n      isPseudo.current = false;\n      isClassOrId.current = false;\n    }\n\n    comment.current += piece;\n\n    if (comment.current.includes(\"/*\") && !isComment.current) {\n      isComment.current = true;\n      comment.current = \"\";\n    }\n\n    if (comment.current.includes(\"*/\") && isComment.current) {\n      isComment.current = true;\n      comment.current = \"\";\n    }\n\n    const className = isComment.current\n      ? \"comment\"\n      : isString.current\n      ? \"string\"\n      : isEscaped.current\n      ? useFlip([isEscaped, isString], \"string\")\n      : isColon.current\n      ? \"var\"\n      : escapeHighlight.current\n      ? useFalse([escapeHighlight], \"normal\")\n      : nextString.current\n      ? useFalse([nextString], \"string\")\n      : isClassOrId.current\n      ? \"class\"\n      : isPseudo.current\n      ? \"property\"\n      : isTag.current\n      ? \"keyword\"\n      : isNumber.current\n      ? useFalse([isNumber], \"var\")\n      : isValue.current\n      ? \"normal\"\n      : isProperty.current\n      ? \"property\"\n      : \"normal\";\n\n    return (\n      <span className={className} key={Math.random()}>\n        {piece}\n      </span>\n    );\n  });\n};\n","/* eslint-disable react-hooks/rules-of-hooks */\n\nimport React from \"react\";\n\nimport \"./code.css\";\nimport \"../../syntax/syntax.css\";\n\nimport {\n  useHighlightCSS,\n  useHighlightHTML,\n  useHighlightJS,\n} from \"../../syntax/highlight\";\n\ninterface Props {\n  code: string;\n  lang: string;\n}\n\nconst Code: React.FC<Props> = ({ code, lang }) => {\n  const highlightedCode =\n    lang === \"js\" ? (\n      useHighlightJS(code)\n    ) : lang === \"html\" ? (\n      useHighlightHTML(code)\n    ) : lang === \"css\" ? (\n      useHighlightCSS(code)\n    ) : (\n      <span>Unsupported language: {lang}</span>\n    );\n\n  return (\n    <div className=\"post-code\">\n      <pre className=\"light\">{highlightedCode}</pre>\n    </div>\n  );\n};\n\nexport default Code;\n","import React from \"react\";\n\nimport \"./text.css\";\n\ninterface Props {\n  text: string;\n}\n\nconst Text: React.FC<Props> = ({ text }) => {\n  return <p className=\"post-text\">{text}</p>;\n};\n\nexport default Text;\n","import React, { useEffect, useState } from \"react\";\nimport { Link, Redirect, useParams } from \"react-router-dom\";\n\nimport { Content, Post } from \"../Post\";\n\nimport \"./blog.css\";\nimport Code from \"./code/Code\";\nimport \"./post.css\";\n\nimport Text from \"./text/Text\";\n\ninterface Params {\n  postTitleURLParam: string;\n}\n\ninterface Props {\n  retrieve: Function;\n}\n\nconst Blog: React.FC<Props> = ({ retrieve }) => {\n  const { postTitleURLParam } = useParams<Params>();\n\n  const [post, setPost] = useState<Post>({\n    data: {\n      author: \"\",\n      content: [],\n      createdAt: new Date().toDateString(),\n      title: \"\",\n      link: \"\",\n      suggestions: [],\n    },\n  });\n\n  useEffect(() => {\n    (async function () {\n      let mounted = true;\n\n      if (mounted) setPost(await retrieve(postTitleURLParam));\n\n      return () => (mounted = false);\n    })();\n  }, [postTitleURLParam, retrieve]);\n\n  if (!post) return <Redirect to=\"/something-went-wrong\" />;\n\n  return (\n    <article className=\"blog\">\n      <div className=\"post-meta\">\n        <h3 className=\"post-title\">{post.data.title}</h3>\n        <div className=\"post-info\">\n          <p className=\"post-timestamp\">{post.data.createdAt}</p>\n          <p className=\"post-author\">posted by {post.data.author}</p>\n        </div>\n      </div>\n      <div className=\"post-content\">\n        {post.data.content.map((content: Content) => {\n          switch (content.type) {\n            case \"text\":\n              return <Text text={content.content} key={Math.random()} />;\n            case \"code\":\n              return (\n                <Code\n                  code={content.content}\n                  lang={content.lang || \"js\"}\n                  key={Math.random()}\n                />\n              );\n            case \"image\":\n              return (\n                <div className=\"post-image-container\">\n                  <a\n                    href={content.content}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    <img\n                      src={content.content}\n                      alt=\"\"\n                      key={Math.random()}\n                      className=\"post-image\"\n                    />\n                  </a>\n                </div>\n              );\n            default:\n              console.log(`Unsupported content type: ${content.type}`);\n              return <div key={Math.random()}></div>;\n          }\n        })}\n      </div>\n      <div className=\"post-suggestions-container\">\n        {post.data.suggestions ? (\n          <>\n            <h3 className=\"post-suggestions-title\">suggestions</h3>\n            <hr />\n          </>\n        ) : (\n          \"\"\n        )}\n        <ul className=\"post-suggestions\">\n          {post.data.suggestions?.map((suggestion) => (\n            <li className=\"post-suggestion\">\n              <Link to={`${process.env.PUBLIC_URL}/posts/${suggestion.link}`}>\n                {suggestion.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </article>\n  );\n};\n\nexport default Blog;\n"],"sourceRoot":""}